image: debian:bullseye

stages:
  - archive
  - release

create_panorama_graph_archive:
  stage: archive
  script:
    - apt-get update && apt-get install -y zip
    - ZIP_NAME="Panorama_graph-$CI_COMMIT_TAG.zip"
    - mkdir -p dist
    - cd Panorama_graph
    - zip -r "../dist/$ZIP_NAME" . -x "*.git*" "../dist/*"
    - cd ..
  only:
    - tags
  artifacts:
    paths:
      - dist/Panorama_graph-$CI_COMMIT_TAG.zip
    expire_in: 1 week

release_graph:
  stage: release
  image: debian:bullseye
  dependencies:
    - create_panorama_graph_archive
  before_script:
    - apt-get update && apt-get install -y curl jq
  script: |
    echo "Tag: $CI_COMMIT_TAG"
    ZIP_NAME="Panorama_graph-$CI_COMMIT_TAG.zip"
    echo "Archive name: $ZIP_NAME"

    ls -l dist/$ZIP_NAME

    echo "Uploading archive to GitLab release..."
    UPLOAD_RESPONSE=$(curl --silent --header "JOB-TOKEN: $CI_JOB_TOKEN" \
      --header "Content-Type: application/octet-stream" \
      --upload-file "dist/$ZIP_NAME" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/uploads")

    echo "Upload response: $UPLOAD_RESPONSE"

    ASSET_URL=$(echo "$UPLOAD_RESPONSE" | jq -r .url)
    echo "Extracted ASSET_URL: $ASSET_URL"

    if [ "$ASSET_URL" = "null" ] || [ -z "$ASSET_URL" ]; then
      echo "Error: Upload failed or URL is null."
      exit 1
    fi

    FULL_ASSET_URL="$CI_PROJECT_URL$ASSET_URL"
    echo "Full asset URL: $FULL_ASSET_URL"

    # Cr√©ation de la release
    curl --request POST --header "JOB-TOKEN: $CI_JOB_TOKEN" \
      --header "Content-Type: application/json" \
      --data "{
        \"name\": \"$CI_COMMIT_TAG\",
        \"tag_name\": \"$CI_COMMIT_TAG\",
        \"description\": \"Archive for $CI_COMMIT_TAG\",
        \"assets\": {
          \"links\": [
            {
              \"name\": \"$ZIP_NAME\",
              \"url\": \"$FULL_ASSET_URL\"
            }
          ]
        }
      }" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"

    echo "Release created with asset."
  only:
    - tags